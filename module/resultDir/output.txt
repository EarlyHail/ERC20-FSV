Using network 'test'.


Compiling your contracts...
===========================
> Compiling .\contracts\POLY.sol
> Compilation warnings encountered:

    /C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:102:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PolyToken(address _polyDistributionContractAddress) public {
  ^ (Relevant source part starts here and spans across multiple lines).
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/Target.sol:7:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Target() public PolyToken(address(1)) {
    ^ (Relevant source part starts here and spans across multiple lines).
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:12:3: Warning: Functions in interfaces should be declared external.
  function balanceOf(address _owner) public view returns (uint256);
  ^---------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:13:3: Warning: Functions in interfaces should be declared external.
  function allowance(address _owner, address _spender) public view returns (uint256);
  ^---------------------------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:14:3: Warning: Functions in interfaces should be declared external.
  function transfer(address _to, uint256 _value) public returns (bool);
  ^-------------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:15:3: Warning: Functions in interfaces should be declared external.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);
  ^--------------------------------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:16:3: Warning: Functions in interfaces should be declared external.
  function approve(address _spender, uint256 _value) public returns (bool);
  ^-----------------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:105:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(address(0), _polyDistributionContractAddress, totalSupply);
    ^-----------------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:139:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:157:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:173:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:189:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
,/C/Users/moonh/Documents/Study/BlockChain/Doc/truffleTest/testPOLY/contracts/POLY.sol:210:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^

> Artifacts written to C:\Users\moonh\AppData\Local\Temp\test-202065-100960-mapv7m.ags6r
> Compiled successfully using:
   - solc: 0.4.26+commit.4563c3fc.Emscripten.clang


[0m[0m
[0m  Contract: POLY[0m
  [32m  âˆš[0m[90m 1. totalSupply()[0m[33m (42ms)[0m
  [32m  âˆš[0m[90m 2. balanceOf(): valid owner[0m[31m (115ms)[0m
  [32m  âˆš[0m[90m 3. balanceOf(): invalid owner[0m[31m (106ms)[0m
  [32m  âˆš[0m[90m 4. transfer(): sender.balance >= value & to.balance+value <= MAX & value != 0[0m[31m (300ms)[0m
  [32m  âˆš[0m[90m 5. transfer(): sender.balance >= value & to.balance+value <= MAX & value == 0[0m[31m (293ms)[0m
  [31m  1) 6. transfer(): sender.balance >= value & to.balance+value > MAX[0m
    > No events were emitted
  [32m  âˆš[0m[90m 7. transfer(): sender.balance < value[0m[31m (110ms)[0m
  [32m  âˆš[0m[90m 8. transfer(): invalid sender[0m[31m (135ms)[0m
  [32m  âˆš[0m[90m 9. transferFrom(): sender.balance >= value & to.balance+value <= MAX & caller's allowance by from >= value & value != 0[0m[31m (503ms)[0m
  [32m  âˆš[0m[90m 10. transferFrom(): sender.balance >= value & to.balance+value <= MAX & caller's allowance by from >= value & value == 0[0m[31m (368ms)[0m
  [32m  âˆš[0m[90m 11. transferFrom(): sender.balance >= value & to.balance+value <= MAX & caller's allowance by from < value[0m[31m (206ms)[0m
  [31m  2) 12. transferFrom(): sender.balance >= value & to.balance+value > MAX[0m
    > No events were emitted
  [32m  âˆš[0m[90m 13. transferFrom(): sender.balance < value[0m[31m (208ms)[0m
  [32m  âˆš[0m[90m 14. transferFrom(): invalid sender[0m[31m (264ms)[0m
  [32m  âˆš[0m[90m 15. approve(): caller balance >= value[0m[31m (232ms)[0m
  [31m  3) 16. approve(): caller balance < value[0m
    > No events were emitted
  [31m  4) 17. approve(): invalid caller[0m
    > No events were emitted
  [32m  âˆš[0m[90m 18. allowance(): valid owner[0m[31m (141ms)[0m
  [32m  âˆš[0m[90m 19. allowance(): invalid owner[0m[31m (151ms)[0m


[92m [0m[32m 15 passing[0m[90m (4s)[0m
[31m  4 failing[0m

[0m  1) Contract: POLY
       6. transfer(): sender.balance >= value & to.balance+value > MAX:
[0m[31m     Error: Returned error: VM Exception while processing transaction: revert[0m[90m
     at PromiEvent (C:\Users\moonh\AppData\Roaming\npm\node_modules\truffle\build\webpack:\packages\contract\lib\promievent.js:9:1)
      at Function.call (C:\Users\moonh\AppData\Roaming\npm\node_modules\truffle\build\webpack:\packages\contract\lib\execute.js:120:1)
      at Context.it (test\erc20test.js:103:49)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  2) Contract: POLY
       12. transferFrom(): sender.balance >= value & to.balance+value > MAX:
[0m[31m     Error: Returned error: VM Exception while processing transaction: revert[0m[90m
     at PromiEvent (C:\Users\moonh\AppData\Roaming\npm\node_modules\truffle\build\webpack:\packages\contract\lib\promievent.js:9:1)
      at Function.call (C:\Users\moonh\AppData\Roaming\npm\node_modules\truffle\build\webpack:\packages\contract\lib\execute.js:120:1)
      at Context.it (test\erc20test.js:244:49)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  3) Contract: POLY
       16. approve(): caller balance < value:

      [31mapprove() fail[0m
      [32m+ expected[0m [31m- actual[0m

      [31m-false[0m
      [32m+true[0m
      [0m[90m
      at Context.it (test\erc20test.js:329:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  4) Contract: POLY
       17. approve(): invalid caller:

      [31mapprove() fail[0m
      [32m+ expected[0m [31m- actual[0m

      [31m-false[0m
      [32m+true[0m
      [0m[90m
      at Context.it (test\erc20test.js:344:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m


