<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ERC20 Functional Verifier</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/app/basic.css"/>
    <style>
        .container{
            max-width:100%;
        }
    </style>
</head>
<body>
    <div id="root">
        <div class="App">
            <header class="App-header">
                <h1>ERC20 Functional Verifier</h1>
                <h2>Upload an ERC20 contract (YourContract.sol)<br>
                    with a target wrapper (Target.sol)<br>
                    and a test setup (initialize.js)<br>
                    if the ERC20 contract conforms to a functional specification for ERC 20.</h2>
            </header>
            <div class="App-body">
                <div class="App-sample">
                    [Sample]&nbsp;
                      <a href = "https://github.com/moonhyeonah/Erc20FunctionalVerifier/blob/master/top100tokens/LINK/LINK.sol" target="_blank">LINK.sol</a>&nbsp;&nbsp;
                      <a href = "https://github.com/moonhyeonah/Erc20FunctionalVerifier/blob/master/top100tokens/LINK/Target.sol" target="_blank">Target.sol</a>&nbsp;&nbsp;
                      <a href = "https://github.com/moonhyeonah/Erc20FunctionalVerifier/blob/master/top100tokens/LINK/initialize.js" target="_blank">initialize.js</a>
                    <div>
                        <input type="button" class="example-btn" value="show Examples">
                    </div>
                </div>
                <form id="file-upload-form">
                    <div class="fileBox pb-2">
                        <label for="file1">Upload</label>
                        <input type="file" id="file1" name="file1">
                        <input class="upload-name1 upload" value="ERC20 Token Solidity Source" readonly><br>
                        <label for="file2">Upload</label>
                        <input type="file" id="file2" name="file2">
                        <input class="upload-name2 upload" value="Target Solidity Source" readonly><br>
                        <label for="file3">Upload</label>
                        <input type="file" id="file3" name="file3">
                        <input class="upload-name3 upload" value="Test Setting" readonly>
                        <button type="button" id="btn-file-upload" class="verify-button"> Verify </button>
                    </div>
                </form>
                <pre id="output" type="text/plain" class="text-md-left output"></pre>
                <p class="App-notes">
                    The contract source code must be verified on etherscan, and be compiled with its own version of
                    Solidity. This page uses a test suite implementation of the functional specification for ERC 20 using Truffle.
                    It verifies the functional behavior of ERC 20 APIs, such as transfer, transferFrom, and approve.
                    The development of this page is inspired by the web site for theÂ <a href = "https://erc20-verifier.openzeppelin.com" target="_blank">ERC20 Verifier</a>
                </p>
                <p class="App-notes">
                    Have any feedback? Share any thoughts in the <a href = "https://github.com/moonhyeonah/Erc20FunctionalVerifier" target="_blank">GitHub web site</a>
                </p>
            </div>
            <div class="example-container">
                <div class="example-header">
                    <h4>Examples</h4>
                    <span class="example-close-btn">X</span>
                </div>
                <div class="example-content">
                </div>
            </div>
        </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="js/app/index.js">

</script>

</html>